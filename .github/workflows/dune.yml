name: dune-pkg build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**" # This will match pull requests targeting any branch

jobs:
  build:
    strategy:
      matrix:
        runs-on: [ubuntu-latest, macos-latest, macos-13]
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup dune
        id: setup-dune
        shell: bash
        run: |
          curl -fsSL https://get.dune.build/install | sh
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          echo "dune-cache-root=$HOME/.cache/dune" >> "$GITHUB_OUTPUT"

      - name: Restore dune cache
        uses: actions/cache@v4
        id: dune-cache
        with:
          path: ${{ steps.setup-dune.outputs.dune-cache-root }}
          key: dune-cache-${{ runner.os }}-${{ runner.arch }}

      - name: Install gpatch and add to PATH on macOS
        if: runner.os == 'macOS'
        shell: bash
        run: |
          set -e
          brew update
          brew install gpatch
          brew update
          brew install gpatch
          # Apple Silicon (macos-latest, macos-14)
          if [ -d "/opt/homebrew/opt/gpatch/libexec/gnubin" ]; then
            GPATCH_GNUBIN="/opt/homebrew/opt/gpatch/libexec/gnubin"
          # Intel (macos-13)
          elif [ -d "/usr/local/opt/gpatch/libexec/gnubin" ]; then
            GPATCH_GNUBIN="/usr/local/opt/gpatch/libexec/gnubin"
          else
            echo "::error::gpatch gnubin directory not found!"
            exit 1
          fi
          DIR_CONTENTS="$(ls -l "$GPATCH_GNUBIN")"
          while IFS= read -r line; do
            echo "::debug::$line"
          done <<< "$DIR_CONTENTS"
          echo "$GPATCH_GNUBIN" >> $GITHUB_PATH
          patch --version

      - name: Resolve dependencies
        shell: bash
        run: |
          dune pkg lock

      - name: Install depexts
        shell: bash
        run: |
          bash "${{ github.workspace }}/.github/install-depexts.sh"
        env:
          RUNNER_OS: ${{ runner.os }}

      - name: Build project
        shell: bash
        run: |
          dune build cubzzle.install

      - name: Save dune cache
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.setup-dune.outputs.dune-cache-root }}
          key: ${{ steps.dune-cache.outputs.cache-primary-key }}
